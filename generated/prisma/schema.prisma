generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model roles {
  id                Int          @id @default(autoincrement())
  role_name         String       @unique(map: "role_name") @db.VarChar(50)
  creation_date     DateTime     @default(now()) @db.Timestamp(0)
  modification_date DateTime     @default(now()) @db.Timestamp(0)
  active            Boolean      @default(true)
  user_roles        user_roles[]
}

model tournament {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  start_date DateTime @db.Date
  end_date   DateTime @db.Date
  location   String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
}

model user_roles {
  id              Int      @id @default(autoincrement())
  user_id         Int
  role_id         Int
  assignment_date DateTime @default(now()) @db.Timestamp(0)
  users           users    @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "user_roles_ibfk_1")
  roles           roles    @relation(fields: [role_id], references: [id], onUpdate: Restrict, map: "user_roles_ibfk_2")

  @@index([role_id], map: "role_id")
  @@index([user_id], map: "user_id")
}

model users {
  id                Int          @id @default(autoincrement())
  name              String       @db.VarChar(100)
  surname           String       @db.VarChar(100)
  email             String       @unique(map: "email") @db.VarChar(100)
  password_hash     String       @db.VarChar(255)
  creation_date     DateTime     @default(now()) @db.Timestamp(0)
  modification_date DateTime     @default(now()) @db.Timestamp(0)
  active            Boolean      @default(true)
  user_roles        user_roles[]
}
